{"version":3,"sources":["../src/index.js"],"names":["isFunction","helpers","paramsHaveRequestBody","canUseKeepAlive","semver","gte","process","version","initParams","uri","options","callback","params","paranoid","Error","method","Request","defaults","paranoidDefaults","requester","self","wrapRequestMethod","verbs","forEach","verb","cookie","jar","forever","paranoidForever","agentOptions","optionsArg","verbFunc","toUpperCase","get","head","post","put","patch","del","delete","request","opts","target","pool","PatchedRequest","httpModules","paranoidHttp","paranoidHttps","agentClass","AddrValidator","httpModule","httpsModule","module","exports"],"mappings":"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","file":"index.js","sourcesContent":["// Copyright (c) 2016 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n// Largely a copy of Request's index.js file.\n/* globals process */\nimport semver from 'semver';\nimport extend from 'extend';\nimport helpers from 'request/lib/helpers';\nimport request from 'request';\n\nconst isFunction = helpers.isFunction;\nconst paramsHaveRequestBody = helpers.paramsHaveRequestBody;\n\nimport AddrValidator from './addr_validator';\nimport paranoidHttp from './http';\nimport paranoidHttps from './https';\n\nconst canUseKeepAlive = semver.gte(process.version, '0.11.0');\n\n// organize params for patch, post, put, head, del\nfunction initParams(uri, options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n  }\n\n  const params = {};\n  if (typeof options === 'object') {\n    extend(params, options, {uri});\n  } else if (typeof uri === 'string') {\n    extend(params, {uri});\n  } else {\n    extend(params, uri);\n  }\n\n  params.callback = callback || params.callback;\n  return params;\n}\n\nfunction paranoid(uri, options, callback) {\n  if (typeof uri === 'undefined') {\n    throw new Error('undefined is not a valid uri or options object.');\n  }\n\n  const params = initParams(uri, options, callback);\n\n  if (params.method === 'HEAD' && paramsHaveRequestBody(params)) {\n    throw new Error('HTTP HEAD requests MUST NOT include a request body.');\n  }\n\n  return new paranoid.Request(params);\n}\n\nparanoid.defaults = function paranoidDefaults(options, requester) {\n  const self = this;\n\n  options = options || {};\n\n  if (typeof options === 'function') {\n    requester = options;\n    options = {};\n  }\n\n  const defaults = wrapRequestMethod(self, options, requester);\n\n  const verbs = ['get', 'head', 'post', 'put', 'patch', 'del', 'delete'];\n  verbs.forEach(verb => {\n    defaults[verb] = wrapRequestMethod(self[verb], options, requester, verb);\n  });\n\n  defaults.cookie = wrapRequestMethod(self.cookie, options, requester);\n  defaults.jar = self.jar;\n  defaults.defaults = self.defaults;\n  return defaults;\n};\n\nparanoid.forever = function paranoidForever(agentOptions, optionsArg) {\n  const options = {};\n\n  if (optionsArg) {\n    extend(options, optionsArg);\n  }\n\n  if (agentOptions) {\n    options.agentOptions = agentOptions;\n  }\n\n  options.forever = true;\n  return paranoid.defaults(options);\n};\n\nfunction verbFunc(verb) {\n  const method = verb.toUpperCase();\n  return (uri, options, callback) => {\n    const params = initParams(uri, options, callback);\n    params.method = method;\n    return paranoid(params, params.callback);\n  };\n}\n\n// define like this to please codeintel/intellisense IDEs\nparanoid.get = verbFunc('get');\nparanoid.head = verbFunc('head');\nparanoid.post = verbFunc('post');\nparanoid.put = verbFunc('put');\nparanoid.patch = verbFunc('patch');\nparanoid.del = verbFunc('delete');\nparanoid.delete = verbFunc('delete');\n\nparanoid.jar = request.jar;\nparanoid.cookie = request.cookie;\n\nfunction wrapRequestMethod(method, options, requester, verb) {\n\n  return (uri, opts, callback) => {\n    const params = initParams(uri, opts, callback);\n\n    const target = {};\n    extend(true, target, options, params);\n\n    target.pool = params.pool || options.pool;\n\n    if (verb) {\n      target.method = verb.toUpperCase();\n    }\n\n    if (isFunction(requester)) {\n      method = requester;\n    }\n\n    return method(target, target.callback);\n  };\n}\n\nclass PatchedRequest extends request.Request {\n  constructor(options) {\n    if (!options) {\n      options = {};\n    }\n    if (options.httpModules) {\n      throw new Error('Manually setting httpModules is unsupported');\n    }\n    options.httpModules = {\n      'http:': paranoidHttp,\n      'https:': paranoidHttps\n    };\n    super(options);\n  }\n\n  init(options) {\n    if (!options) {\n      options = {};\n    }\n\n    if (options.agentClass) {\n      // This would allow accidentally bypassing the restrictions. Maybe we\n      // should check they're using an agent based on ours instead?\n      throw new Error('Manually setting agentClass is unsupported');\n    }\n\n    // Keep-Alive has to be disabled on 0.10.x because it will use\n    // ForeverAgent instead of our patched Agents.\n    if (!canUseKeepAlive && options.forever) {\n      options.forever = false;\n    }\n\n    // Pass through to the original `Request.init`\n    return super.init(options);\n  }\n}\n\nparanoid.AddrValidator = AddrValidator;\nparanoid.Request = PatchedRequest;\nparanoid.initParams = initParams;\nparanoid.httpModule = paranoidHttp;\nparanoid.httpsModule = paranoidHttps;\n\nmodule.exports = paranoid;\n"]}